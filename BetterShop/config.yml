## BetterShop Configuration file ##
################################### 

##########################################
# strings section: Text used in messages #
##########################################
strings:

# In some strings below, you can use certain keys to represent
# dynamic fields that are filled in by the plugin. These keys are
# always in angle brackets "< >". I've tried to use as many of the
# allowable tags in each string as I can. Those that I couldn't use
# but are still valid are listed in the description following the
# string.
# 
#   For example, in the notforsale string, <item> is used to 
# represent the item that the user is trying to buy but can't.
# In this file the default for that line is:
# 
#   notforsale: "&f[<item>] &2is not for sale."
#
# In game, trying to buy wood while it's not in the shop would result
# in seeing this message:
#
#   SHOP: [wood] is not for sale.
#
###
#
# Colors are specified by using "&[colorcode]". Never put colors within
# the angle brackets of a tag!
#   Color table:
#       &0 is black
#       &1 is dark blue
#       &2 is dark green
#       &3 is dark sky blue
#       &4 is red
#       &5 is magenta
#       &6 is gold or amber
#       &7 is light grey
#       &8 is dark grey
#       &9 is medium blue
#       &2 is light green
#       &b is cyan
#       &c is orange-red
#       &d is pink
#       &e is yellow
#       &f is white
#
#  Get it? Good. Now have fun.



#
# general messages
####

    prefix: "&fSHOP&2: "
    # prefix is what comes before each and EVERY BetterShop message. Putting default colors here makes things easy.

    permdeny: "OI! You don't have permission to do that!"
    # permdeny is the permission denied message. The key <perm> can be used to show the permission node that was checked.

    unkitem: "What the frack is &f<item>&2?"
    # unkitem is the unknown item message.
    
    nicetry: "...Nice try!"
    # nicetry is shown when someone tries to beat the system. Like /shopbuy diamond 0.
    
#
# shopadd messages
####

    paramerror: "Oops... something wasn't right there."
    # paramerror indicates a syntax error when trying to add an item to the shop.
    
    addmsg: "&f[<item>]&2 added to the shop. Buy: &f<buyprice>&2 Sell: &f<sellprice>"
    # addmsg confirms a successful addition to the shop. You can also use <curr> here.

#
# shopremove messages
####

    removemsg: "&f[<item>]&2 removed from the shop"
    # removemsg confirms a successful removal from the shop.       
     
#
# shopcheck messages
####

    pricecheck: "Price check! &f[<item>]&2 Buy: &f<buyprice> &2Sell: &f<sellprice>"
    # pricecheck is what shows up when a player asks for a /shopcheck. You can also use the <curr> key here.
    
    nolisting: "&f[<item>] &2cannot be bought or sold."
    # nolisting is the message that the item is neither for sale nor can be sold.

#
# shoplist messages
####

    listhead: "----- Price-List Page: &f<page> &2of &f<pages> &2-----"
    # listhead is the top of a /shoplist page.
    
    listing: "&f[<item>]&2 Buy: &f<buyprice>&2 Sell: &f<sellprice>"
    # listing is the actual price listing message

    listtail: "----------------------------"
    # listtail is the end of a /shoplist page.

#
# shopbuy messages
####
    
    buymsg: "Buying &f<amt> &2<item> at &f<priceper> &2<curr> each... &f<total> &2<curr> total!"
    # buymsg is the message shown when successfully buying
    
    outofroom: "You bought &f<leftover>&2 too much &f<item>&2. Refunding &f<refund> <curr>&2."
    # outofroom is displayed when someone tries to buy more than they can carry. An additional key you can
    # use here is <priceper>
    
    insuffunds: "You don't have &f<total> &2<curr>!"
    # insuffunds is displayed when someone tries to buy more than they can afford. Additional keys you can
    # use here are <priceper>, <item>, and <amt>.
    
    notforsale: "&f[<item>] &2is not for sale."
    # notforsale is the item not for sale message.

#
# shopsell messages
####

    donthave: "You only have <hasamt>, not <amt>"
    # donthave is displayed when the user tries to sell more than they have.
    
    sellmsg: "Selling &f<amt> &2<item> at &f<priceper> &2<curr> each... &f<total> &2<curr> total!"
    # sellmsg is shown when a successful sell occurs. 
    
    donotwant: "&f[<item>] &2has no value to me. No thanks."
    # donotwant is what shows when a user tries to sell something that the shop won't buy from them.
    